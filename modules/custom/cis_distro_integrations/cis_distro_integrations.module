<?php
/**
 * @file
 * Modifications to specific distributions during integration with a service instance.
 */

/**
 * Implements hook_cis_service_instance_TOOL_options_alter().
 */
function cis_distro_integrations_cis_service_instance_courses_options_alter(&$options, $course, $service) {
  // revert the mooc ux defaults, they struggle to automatically
  $options['fr'][] = 'mooc_ux_defaults';
  $options['fr'][] = 'mooc_cis_ux';
}

/**
 * Implements hook_cis_service_instance_TOOL_job_file_alter().
 */
function cis_distro_integrations_cis_service_instance_courses_job_file_alter(&$content, $course, $service, $service_instance) {
  // only apply default content import for course based service
  if ($service->field_machine_name[LANGUAGE_NONE][0]['value'] == CIS_HELPER_COURSE_SERVICE && !empty($service_instance->field_service_data[LANGUAGE_NONE][0]['value'])) {
    // allow for on creation population of material
    $content .= 'drush feeds-import feeds_node_helper_book_import --file=' . $service_instance->field_service_data[LANGUAGE_NONE][0]['value'] . "\n";
    $content .= 'drush uuid-recreate' . "\n";
  }
}

/**
 * Implements hook_cis_service_instance_TOOL_options_alter().
 */
function cis_distro_integrations_cis_service_instance_blog_options_alter(&$options, $course, $service) {
  // establish foundation access as the base theme
  $options['cook'][] = 'foundation_access_dep --mlt-fa_sub=meedjum_blog_foundation_access';
  // recipe that can chain to hook meedjum blog up to elmsln
  $options['cook'][] = 'elmsln_meedjum_blog';
  // revert these features that always need reverted
  $options['fr'][] = 'cis_service_lti';
  $options['fr'][] = 'cis_section';
  $options['fr'][] = 'cis_service_connection_ux';
}

/**
 * Implements hook_cis_service_instance_TOOL_options_alter().
 */
function cis_distro_integrations_cis_service_instance_discuss_options_alter(&$options, $course, $service) {
  // establish foundation access as the base theme
  $options['cook'][] = 'foundation_access_dep --mlt-fa_sub=discuss_foundation_access';
  // recipe that can chain to hook harmony up to elmsln
  $options['cook'][] = 'elmsln_harmony';
  // revert these features that always need reverted
  $options['fr'][] = 'cis_service_lti';
  $options['fr'][] = 'cis_section';
  $options['fr'][] = 'cis_service_connection_ux';
}
